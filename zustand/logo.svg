<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="210.00002mm"
   height="297mm"
   viewBox="0 0 793.71085 1122.5338"
   version="1.1"
   id="svg1"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <defs
     id="defs1">
    <linearGradient
       id="swatch6">
      <stop
         style="stop-color:#ffffff;stop-opacity:0.132308;"
         offset="0"
         id="stop6" />
    </linearGradient>
    <rect
       x="169"
       y="798"
       width="122"
       height="147"
       id="rect31" />
    <rect
       x="166"
       y="801"
       width="409"
       height="73"
       id="rect30" />
    <linearGradient
       id="swatch22">
      <stop
         style="stop-color:#00050d;stop-opacity:0;"
         offset="0"
         id="stop22" />
    </linearGradient>
    <linearGradient
       id="swatch17">
      <stop
         style="stop-color:#000000;stop-opacity:1;"
         offset="0"
         id="stop17" />
    </linearGradient>
    <rect
       x="69"
       y="756"
       width="280"
       height="159"
       id="rect11" />
    <linearGradient
       xlink:href="#swatch6"
       id="linearGradient7"
       gradientUnits="userSpaceOnUse"
       gradientTransform="translate(8.451816,87.335525)"
       x1="297.80374"
       y1="132.00166"
       x2="594.20752"
       y2="132.00166" />
  </defs>
  <g
     id="layer1">
    <g
       id="g17"
       transform="translate(-8.451825,-87.335525)">
      <text
         xml:space="preserve"
         transform="matrix(1.0000126,0,0,1.0000126,160.98344,61.375423)"
         id="text11"
         style="text-align:start;writing-mode:lr-tb;direction:ltr;white-space:pre;shape-inside:url(#rect11);display:inline;opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:18.2;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1" />
      <text
         xml:space="preserve"
         style="font-style:italic;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:12.0002px;line-height:0px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Italic';text-align:start;writing-mode:tb-rl;direction:ltr;text-anchor:start;opacity:1;fill:#73051a;fill-opacity:0;fill-rule:evenodd;stroke:#000000;stroke-width:1.60002;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
         x="263.98474"
         y="805.38483"
         id="text29"><tspan
           id="tspan29"
           style="stroke-width:1.60002"
           x="263.98474"
           y="805.38483" /></text>
      <text
         xml:space="preserve"
         transform="matrix(1.0000126,0,0,1.0000126,160.98344,61.375423)"
         id="text30"
         style="font-style:italic;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:0px;font-family:sans-serif;-inkscape-font-specification:'sans-serif Italic';text-align:start;writing-mode:tb-rl;direction:ltr;white-space:pre;shape-inside:url(#rect30);display:inline;opacity:1;fill:#73051a;fill-opacity:0;fill-rule:evenodd;stroke:#000000;stroke-width:1.6;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1" />
      <path
         style="fill:#000000;stroke:none;stroke-width:18.2002"
         d="m 429.50426,361.17566 c -58.49468,0.42167 -116.43539,11.37429 -171.04688,32.33594 l -7.0664,2.71289 1.3789,7.44336 c 20.87724,112.6204 80.77514,214.28673 169.16602,287.13086 l 5.73047,4.7207 5.77539,-4.66406 C 523.3747,618.23249 584.55389,515.98989 606.03941,402.41003 l 1.42383,-7.52343 -7.16992,-2.68946 C 545.70285,371.72308 487.88009,361.21688 429.57652,361.17566 h -0.0371 z m 0.0996,18.19922 c 53.50728,0.0425 106.56197,9.34702 156.93164,27.28711 C 565.1039,510.46206 509.16094,603.90318 427.7816,671.81628 347.83268,603.73349 293.0755,510.8231 272.23863,407.90417 322.67204,389.49243 375.87812,379.76575 429.60387,379.37488 Z"
         id="path8" />
      <g
         id="path9"
         transform="translate(4.461289,-91.711063)"
         style="fill:#000000;stroke:#000000;stroke-width:18.2002">
        <path
           style="fill:#000000;stroke:none"
           d="m 415.01758,444.48633 c -58.90293,0.42461 -117.2476,11.45455 -172.24024,32.5625 l -9.70703,3.72656 1.89649,10.22266 c 21.02282,113.40577 81.33842,215.78266 170.3457,289.13476 l 7.86914,6.48633 7.93359,-6.4082 C 511.6753,707.08166 573.28262,604.12384 594.91797,489.75195 l 1.95508,-10.33398 -9.84766,-3.69336 C 532.05391,455.10765 473.82767,444.52783 415.11719,444.48633 h -0.0488 z m 0.13867,25.00195 c 52.12232,0.0432 103.80672,8.94969 152.9707,26.10742 C 546.61163,596.54046 492.18142,687.43512 413.34375,754.05859 335.90342,687.28173 282.62887,596.90456 261.70703,496.81641 310.95104,479.19012 362.80381,469.87052 415.15625,469.48828 Z"
           id="path10" />
        <path
           id="path11"
           style="fill:#000000;stroke:none"
           d="m 414.94959,435.38709 c -59.99556,0.43249 -119.42298,11.66691 -175.4358,33.16643 l -16.7717,6.43953 3.27738,17.66624 c 1.36047,7.33875 2.9805,14.59981 4.69342,21.83231 l 18.17015,-2.11136 c -1.82559,-7.62849 -3.53482,-15.29329 -4.97076,-23.03935 v -0.002 l -0.51563,-2.77933 2.64065,-1.01369 c 53.9676,-20.7145 111.22449,-31.54082 169.02948,-31.95939 h 0.0156 0.0332 c 57.6195,0.0414 114.76326,10.42677 168.71306,30.66055 l 2.67777,1.00391 -0.53126,2.81059 c -1.53535,8.11639 -3.36363,16.14421 -5.32038,24.13116 l 18.17992,2.10745 c 1.83701,-7.56884 3.56949,-15.16939 5.0235,-22.85576 l 3.37895,-17.85764 -17.0178,-6.3829 c -55.9913,-20.99941 -115.29843,-31.77453 -175.0979,-31.8168 h -0.002 -0.0527 -0.084 z m 0.13867,25.00226 c -53.38846,0.38981 -106.25513,9.89336 -156.44923,27.85973 l -7.46299,2.67191 1.62112,7.75791 c 0.90437,4.32647 1.90721,8.62216 2.9512,12.90446 l 18.30688,-2.12698 c -0.54707,-2.20973 -1.12103,-4.40964 -1.62698,-6.6329 45.99542,-15.56237 94.149,-23.87618 142.75961,-24.23468 48.34873,0.0445 96.29668,7.96275 142.16781,23.0667 -0.59231,2.55379 -1.26086,5.08137 -1.90628,7.61728 l 18.33422,2.12503 c 1.15346,-4.61165 2.2483,-9.24121 3.24223,-13.90447 l 1.67189,-7.84581 -7.57431,-2.64261 C 521.01114,469.51624 468.31648,460.43341 415.16248,460.38935 h -0.0371 z M 276.17337,649.62238 c 28.27674,45.08468 81.65831,103.17588 123.35024,137.53476 l 13.59783,11.20717 13.70916,-11.0724 c 42.30398,-34.1614 89.55125,-92.94532 118.36298,-138.0822 l -16.98567,-0.70158 c -26.26932,38.48708 -76.0081,94.90423 -112.81105,124.62344 l -2.15823,1.74417 -2.14065,-1.7637 v -0.002 c -36.30832,-29.92211 -90.09275,-86.66142 -115.9038,-125.169 z m 50.46847,21.17783 c 22.82891,33.15983 49.87207,63.51954 80.75687,90.15152 l 5.88289,5.07233 5.93367,-5.01373 c 31.31197,-26.46087 70.04144,-70.81472 93.27208,-103.94102 l -17.27748,1.66035 c -18.5741,24.55425 -58.37892,62.64469 -81.80718,83.14957 -23.14156,-20.66492 -56.56291,-50.62195 -74.84844,-75.26476 z" />
      </g>
      <path
         id="text31"
         style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:12px;line-height:0px;font-family:Kirsty;-inkscape-font-specification:'Kirsty, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;writing-mode:tb-rl;direction:ltr;white-space:pre;shape-inside:url(#rect31);fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:1.60002;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:0.132308"
         d="m 167.30545,457.59027 3.34185,13.18378 2.47272,68.53405 h 10.29112 l 13.03142,-41.33058 2.27152,41.33058 h 10.22474 l 20.5823,-68.53405 6.68169,-13.18378 h -18.50997 l 1.66992,13.39278 -9.422,33.27193 -1.9375,-46.66471 h -8.88878 l -14.5002,47.18813 -1.00395,-33.69185 5.08016,-13.49628 z m 71.50289,0 2.60744,13.28728 -6.8829,55.24678 -5.81451,13.18377 h 35.01606 l 2.60743,-21.24051 -9.28918,6.80089 h -10.89272 l 1.93756,-4.29103 2.13871,-17.05498 h 2.20508 l 7.68564,6.48839 3.40823,-27.72889 -9.35556,6.69739 h -2.13871 l 1.60354,-12.66035 -0.93556,-4.18553 h 10.89272 l 7.61725,6.6973 2.60749,-21.24051 z m 54.19596,0 2.60749,13.28728 -6.88289,55.14136 -5.81457,13.28919 h 20.58229 l -2.60548,-13.08019 2.80668,-22.70544 h 12.16225 l -2.80669,22.60186 -5.81451,13.18377 h 20.58229 l -2.60548,-13.18377 6.88289,-55.24678 5.8809,-13.28728 h -20.65063 l 2.60743,13.18378 -2.27347,18.20531 h -12.16224 l 2.27347,-18.10181 5.88095,-13.28728 z m 59.5418,0 1.60549,13.60178 -17.10768,55.45578 -6.54888,12.66027 h 18.44359 l -1.87112,-12.66027 0.60154,-1.98835 H 358.427 l 0.0664,1.56843 -4.81062,13.08019 h 21.38504 l -3.54299,-13.08019 -3.00594,-68.63764 z m 25.12723,0 3.47467,13.60178 2.94145,68.11605 h 10.29111 l 20.9827,-68.43055 6.88295,-13.28728 h -18.44365 l 1.60354,13.07827 -9.89072,33.58644 -1.4024,-33.48093 4.94539,-13.18378 z m 47.17836,0 2.60743,13.28728 -6.88289,55.24678 -5.81452,13.18377 h 35.01606 l 2.60743,-21.24051 -9.28917,6.80089 h -10.89272 l 1.93756,-4.29103 2.1387,-17.05498 h 2.20509 l 7.68563,6.48839 3.40829,-27.72889 -9.35562,6.69739 h -2.1387 l 1.60354,-12.66035 -0.93556,-4.18553 h 10.89272 l 7.6173,6.6973 2.60744,-21.24051 z m 58.67457,0 -5.61337,12.45136 -7.0841,56.9187 2.60554,12.34777 h 31.67616 l -2.60743,-13.18377 2.00589,-16.00997 5.81451,-13.18368 h -19.17995 l 2.60554,13.28919 -1.33596,10.35758 0.86912,4.29103 h -8.55476 l -0.4004,-2.40627 5.8809,-47.71346 1.13676,-2.61527 h 10.08997 l 7.68564,6.6973 2.60548,-21.24051 z m 40.16064,0 -5.61337,12.45136 -7.08209,56.9187 2.60549,12.34777 h 27.73276 l 5.48056,-12.34777 7.08214,-57.02421 -2.47272,-12.34585 z m 36.82275,0 2.60548,13.28728 -6.88289,55.03786 -5.81451,13.39269 h 33.54728 l 2.60548,-21.24051 -9.28918,6.80089 h -9.48837 l 2.00394,-4.29103 6.21491,-49.8034 5.88095,-13.18378 z m 36.75241,0 2.60744,13.28728 -6.8829,55.45578 -5.81451,12.97477 h 35.95162 l 5.54693,-12.34777 7.0841,-57.02421 -2.53911,-12.34585 z m -65.68832,14.54321 h 8.28523 l 0.53516,2.61527 -5.88089,47.71346 -1.002,2.40627 h -8.55476 l -0.4004,-2.40627 5.88089,-47.71346 z m 79.58887,0 h 10.55876 l 0.53516,2.61527 -5.88095,47.71346 -1.00394,2.40627 H 604.5473 l 2.00394,-4.29103 5.54693,-44.25844 z m -254.07157,20.8225 0.66798,16.94947 h -5.74613 z" />
      <path
         id="path6"
         style="fill:#000000;stroke:url(#linearGradient7);stroke-width:44.4006;stroke-opacity:0.132308"
         d="m 399.0559,582.00209 99.58072,-11.53508 116.36142,-13.47889 c 0,0 -431.17992,-0.18914 -431.91724,-0.0815 l 94.9581,10.53109 z" />
      <path
         style="fill:#000000;stroke-width:1"
         d="m 411.0293,414.07354 -227.9477,25.09407 c 0.7782,0.10764 455.86242,-0.0801 455.86242,-0.0801 z m -227.9477,142.83383 227.9477,25.09407 227.91472,-25.01399 c 0,0 -455.08422,-0.18772 -455.86242,-0.0801 z"
         id="path12" />
      <path
         id="path15"
         style="fill:#ffcc00;fill-rule:nonzero;stroke:none;stroke-width:20.0003;stroke-dasharray:none;stroke-opacity:0.132308"
         d="m 367.48221,266.59919 -7.66611,13.67791 -15.61543,1.43947 10.64075,11.51772 -3.45512,15.29512 14.24237,-6.56063 13.47673,8.01377 -1.83791,-15.57246 11.78726,-10.34193 -15.3791,-3.06449 z m 47.89318,1.40822 -7.66611,13.67791 -15.61543,1.44142 10.64076,11.51773 -3.45513,15.29511 14.24237,-6.56063 13.47869,8.01182 -1.83792,-15.57246 11.78531,-10.34193 -15.3791,-3.06449 z m 45.07674,1.40822 -7.66611,13.67986 -15.61543,1.43948 10.64075,11.51772 -3.45512,15.29511 14.24237,-6.56063 13.47869,8.01378 -1.83987,-15.57247 11.78726,-10.34388 -15.3791,-3.06253 z" />
      <path
         id="path17"
         style="fill:#ffcc00;fill-rule:nonzero;stroke:none;stroke-width:20.0003;stroke-dasharray:none;stroke-opacity:0.132308"
         d="m 372.69431,715.95455 -7.66611,13.67791 -15.61543,1.43947 10.64075,11.51772 -3.45512,15.29512 14.24237,-6.56063 13.47673,8.01377 -1.83791,-15.57246 11.78726,-10.34193 -15.3791,-3.06449 z m 47.89318,1.40822 -7.66611,13.67791 -15.61543,1.44142 10.64076,11.51773 -3.45513,15.29511 14.24237,-6.56063 13.47869,8.01182 -1.83792,-15.57246 11.78531,-10.34193 -15.3791,-3.06449 z m 45.07674,1.40822 -7.66611,13.67986 -15.61543,1.43948 10.64075,11.51772 -3.45512,15.29511 14.24237,-6.56063 13.47869,8.01378 -1.83987,-15.57247 11.78726,-10.34388 -15.3791,-3.06253 z" />
    </g>
  </g>
  <script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
